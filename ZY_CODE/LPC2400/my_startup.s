;/****************************************Copyright (c)**************************************************
;**                               广州周立功单片机发展有限公司
;**                                     研    究    所
;**                                        产品一部 
;**
;**                                 http://www.zlgmcu.com
;**
;**--------------文件信息--------------------------------------------------------------------------------
;**文   件   名: IRQ.s
;**创   建   人: 陈明计
;**最后修改日期: 2004年2月2日

;**描        述: lpc21xx的启动代码，包含异常向量入口、初始化堆栈的代码等
;**              每个工程应当有独立的这个文件的拷贝，并进行相应的修改   
;**--------------历史版本信息----------------------------------------------------------------------------
;** 创建人: 陈明计
;** 版  本: v1.0
;** 日　期: 2004年2月2日
;** 描　述: 原始版本
;**
;**------------------------------------------------------------------------------------------------------
;** 修改人: 
;** 版  本: 
;** 日　期: 
;** 描　述: 
;**
;**--------------当前版本修订------------------------------------------------------------------------------
;** 修改人:
;** 日　期:
;** 描　述:
;**
;**------------------------------------------------------------------------------------------------------
;********************************************************************************************************/

;//定义堆栈的顶部
TOP_OF_STACKS           EQU         0x40008000        ;//end of 32K IRAM

;//定义堆栈的大小
SVC_STACK_SIZE          EQU         (1*4)            ;//1 word
FIQ_STACK_SIZE          EQU         (16*4)            ;//16 word
IRQ_STACK_SIZE          EQU         (8*4*16)        ;//2 words * 16 priority
ABT_STACK_SIZE          EQU         (2*4)            ;//2 word
UND_STACK_SIZE          EQU         (2*4)            ;//2 word

;//定义CPSR标志位和字
NoIrq       EQU     0x80
NoFiq       EQU     0x40

USR32Mode   EQU     0x10
FIQ32Mode   EQU     0x11
IRQ32Mode   EQU     0x12
SVC32Mode   EQU     0x13
ABT32Mode   EQU     0x17
UND32Mode   EQU     0x1b
SYS32Mode   EQU     0x1f

;//定义用到的寄存器
VICBaseAddr EQU     0xFFFFF000
IntEnClr    EQU     0x14
VectAddr    EQU     0x30
IntSelect   EQU     0x0C
DefVectAddr EQU     0x34
MEMMAP      EQU     0xE01FC040
PINSEL2     EQU     0xE002C014
BCFG0       EQU     0xFFE00000
BCFG1       EQU     0xFFE00004

;//引入的外部标号在这声明
    IMPORT  FIQ_Exception                   ;//快速中断异常处理程序
    IMPORT  __main                          ;//C语言主程序入口 
    IMPORT  TargetResetInit                 ;//目标板基本初始化

;//给外部使用的标号在这声明
    EXPORT  Reset
    EXPORT __rt_div0                        ;//除零处理
    EXPORT __user_initial_stackheap         ;//初始化堆栈处理


;//32位代码
    CODE32
;/****************************************Copyright (c)*************************************************/
;//入口段,放在ROM的开始处
;/******************************************************************************************************/
    AREA    vectors,CODE,READONLY
        ENTRY
;//中断向量表
Reset
        LDR     PC, ResetAddr
        LDR     PC, UndefinedAddr
        LDR     PC, SWI_Addr
        LDR     PC, PrefetchAddr
        LDR     PC, DataAbortAddr
        DCD     0xb9205f80;检验和
        LDR     PC, [PC, #-0xff0] ;PC=0x20
        LDR     PC, FIQ_Addr

ResetAddr           DCD     ResetInit
UndefinedAddr       DCD     Undefined
SWI_Addr            DCD     SoftwareInterrupt
PrefetchAddr        DCD     PrefetchAbort
DataAbortAddr       DCD     DataAbort
Nouse               DCD     0
IRQ_Addr            DCD     0
FIQ_Addr            DCD     FIQ_Handler

;//未定义指令
Undefined
        MOVS    PC, LR

;//软中断
SoftwareInterrupt
        MOVS    PC, LR

;//取指令中止
PrefetchAbort
        SUBS    PC, LR, #4

;//取数据中止
DataAbort
        SUBS    PC, LR, #8

;//默认非向量IRQ(用于伪中断退出)
IRQ_Exception
        SUBS    PC, LR, #4

;//快速中断(进入FIQ后不响应其他中断请求)
FIQ_Handler
        MSR     CPSR_c, #(NoIrq | NoFiq | SYS32Mode);//切换到系统模式(禁能中断)
        STMFD   SP!, {R0-R3, R12, LR}    ;//保存任务环境
        BL      FIQ_Exception            ;//调用c语言的Fiq处理程序
        LDMFD   SP!, {R0-R3, R12, LR}    ;//恢复任务环境
        MSR     CPSR_c, #(NoIrq | NoFiq | FIQ32Mode);//切换回Fiq模式
        SUBS    PC,  LR,  #4


;/*********************************************************************************************************
;** 复位入口
;** 程序从此处开始执行
;********************************************************************************************************/
ResetInit


;/*********************************************************************************************************
;** 初始化VIC
;********************************************************************************************************/
        LDR     R0, =VICBaseAddr
;//禁止所有中断
        MVN     R1, #0
        STR     R1, [R0, #IntEnClr]
;//全部分配为IRQ
        MOV     R1, #0
        STR     R1, [R0, #IntSelect]
;//清内部中断优先级标志(有16级优先级,所以清16下)
        MOV     R2, #16
LoopClrIP
        STR     R1, [R0, #VectAddr]
        SUBS    R2, R2, #1
        BNE     LoopClrIP
;//设置默认非向量IRQ地址
        LDR     R1, =IRQ_Exception
        STR     R1, [R0, #DefVectAddr]


;/*********************************************************************************************************
;** 设置中断向量映射方式
;********************************************************************************************************/
;//    IF :DEF: IRAM_RUN
;//中断向量映射到IRAM(用于IRAM调试模式),在进入允许中断的系统模式前执行
;//        LDR     R0, =MEMMAP
;//        MOV     R1, #0x02
;//        STR     R1, [R0]
;//    ELSE
;//      IF :DEF: EROM_RUN
;//中断向量映射到EROM,用于外部FLASH调试模式
;//        LDR     R0, =MEMMAP
;//        MOV     R1, #0x03
;//        STR     R1, [R0]
;//设置外部ROM和RAM配置寄存器
;//        LDR     R0, =PINSEL2
;//        LDR     R1, =0x0f814914
;//        STR     R1, [R0]
;//        LDR     R0, =BCFG0
;//        LDR     R1, =0x10001440        ;//RBLE=1, WST1=3, WST2=3, IDCY=1, use in Flash
;//        STR     R1, [R0]
;//        LDR     R0, =BCFG1
;//        LDR     R1, =0x10000400        ;//RBLE=1, WST1=1, WST2=1, IDCY=1, use in RAM
;//        STR     R1, [R0]   
;//      ENDIF
;//    ENDIF
;//中断向量映射到内部FLASH(从地址0x0开始的64个字节)
        LDR     R0, =MEMMAP
        MOV     R1, #0x01
        STR     R1, [R0]


;/********************************************************************************************************/
;//初始化各个模式的堆栈
;/********************************************************************************************************/    
        LDR     R0, =TOP_OF_STACKS

;//设置管理模式堆栈
        MSR     CPSR_c, #(NoIrq | NoFiq | SVC32Mode)
        MOV     SP, R0
        SUB     R0, R0, #SVC_STACK_SIZE
        
;//设置中断模式堆栈
        MSR     CPSR_c, #(NoIrq | NoFiq | IRQ32Mode)
        MOV     SP, R0
        SUB     R0, R0, #IRQ_STACK_SIZE
        
;//设置快速中断模式堆栈
        MSR     CPSR_c, #(NoIrq | NoFiq | FIQ32Mode)
        MOV     SP, R0
        SUB     R0, R0, #FIQ_STACK_SIZE
        
;//设置中止模式堆栈
        MSR     CPSR_c, #(NoIrq | NoFiq | ABT32Mode)
        MOV     SP, R0
        SUB     R0, R0, #ABT_STACK_SIZE
        
;//设置未定义模式堆栈
        MSR     CPSR_c, #(NoIrq | NoFiq | UND32Mode)
        MOV     SP, R0
        SUB     R0, R0, #UND_STACK_SIZE

;//设置系统模式堆栈(允许中断)
        MSR     CPSR_c, #SYS32Mode
        MOV     SP, R0


;/********************************************************************************************************/
;//目标板基本初始化
;//调用C函数
;/********************************************************************************************************/
        BL      TargetResetInit


;/********************************************************************************************************/
;//跳转到c语言入口
;/********************************************************************************************************/
        B       __main


;/*********************************************************************************************************
;** 函数名称: __user_initial_stackheap 
;** 功能描述: 库函数初始化堆和栈，不能删除
;** 
;** 输　入: 参考库函数手册
;**
;** 输　出: 参考库函数手册
;**         
;** 全局变量: 无
;** 调用模块: 无
;**
;** 作　者: 陈明计
;** 日　期: 2004年2月2日
;**-------------------------------------------------------------------------------------------------------
;** 修改人:
;** 日　期:
;**------------------------------------------------------------------------------------------------------
;********************************************************************************************************/
    IMPORT  |Image$$ZI$$Limit|          ;//变量段末尾
__user_initial_stackheap
        LDR     R0, =|Image$$ZI$$Limit|
        MOV     PC, LR


;/*********************************************************************************************************
;** 函数名称: __rt_div0
;** 功能描述: 整数除法除数为0错误处理函数，替代原始的__rt_div0减少目标代码大小
;** 
;** 输　  入: 参考库函数手册
;**
;** 输　  出: 无
;**         
;** 全局变量: 无
;** 调用模块: 无
;**
;** 作　者: 陈明计
;** 日　期: 2004年2月2日
;**-------------------------------------------------------------------------------------------------------
;** 修改人:
;** 日　期:
;**------------------------------------------------------------------------------------------------------
;********************************************************************************************************/
__rt_div0
        B       __rt_div0


;/*********************************************************************************************************
;** 函数名称: CrpData
;** 功能描述: 支持芯片加密功能
;** 
;** 输　入: 无
;**
;** 输　出: 无
;**         
;** 全局变量: 无
;** 调用模块: 无
;**
;** 作　者: 陈明计
;** 日　期: 2004年3月27日
;**-------------------------------------------------------------------------------------------------------
;** 修改人:
;** 日　期:
;**------------------------------------------------------------------------------------------------------
;********************************************************************************************************/
    IF :DEF: EN_CRP
        IF  . >= 0x1fc
        INFO    1,"\nThe data at 0x000001fc must be 0x87654321.\nPlease delete some source before this line."
        ENDIF
CrpData
    WHILE . < 0x1fc
    NOP
    WEND
CrpData1
    DCD     0x87654321          ;/* 当此数为0x87654321时，用户程序被保护 */
    ENDIF


    END
;/*********************************************************************************************************
;**                            End Of File
;********************************************************************************************************/
